sudo: required
dist: trusty
language: python
env:
matrix:
  include:
      - python: 2.7
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.5.1
      - python: 2.7
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.6.0
      - python: 2.7
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.7.0
      - python: 3.5
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.5.1
      - python: 3.5
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.6.0
      - python: 3.5
        env: KERAS_BACKEND=tensorflow TENSORFLOW_V=1.7.0
  exclude:
      - env:

before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

install:
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib pandas h5py
  - source activate test-environment
  # Install TensorFlow
  - if [[ "$TENSORFLOW_V" != "" ]]; then pip install tensorflow==${TENSORFLOW_V}; fi
  - pip install keras
  - conda install libgcc
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/travis/miniconda/envs/test-environment/lib
  - export PYTHONPATH=".":$PYTHONPATH

script:
  - mkdir ./data
  - python -m unittest discover art/ -p '*_unittest.py'
